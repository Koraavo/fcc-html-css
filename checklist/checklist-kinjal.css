*, 
*::after, 
*::before {
    box-sizing: border-box;
    margin: 0; 
    padding: 0; 
    border-radius: 3px;
    
}

:root {

    /* Creating custom selectors, like a global variable */
    /* font families */
    --ff-primary: 'Source Sans Pro', sans-serif;
    --ff-secondary: 'Source Code Pro', monospace;

    /* font weights */
    --fw-reg:  300;
    --fw-bold: 900;

    --clr-light: #fff;
    --clr-dark: #303030;
    --clr-darkgrey: darkgrey;
    --clr-attributes: #E1BE6A;
    --clr-background: #40B0A6;
    

    --fs-h1: 3rem;
    --fs-h2: 2.25rem;
    --fs-h3: 1.25rem;
    --fs-body: 1rem;

    /* --bs: 0.25em 0.25em 0.75em rgba(0,0,0,0.25); */
    --bs: 1px 1px #263238;
          
          
}

@media (max-width: 600px) {
    /* what happens if the width is 800 and above */
    :root {
        --fs-h1: 4.5rem;
        --fs-h2: 3.75rem;
        --fs-h3: 1.5rem;
        --fs-body: 1.125rem;
    }

    #textOther {
        padding: 0;
        margin: 3px;
    }

    .radiobuttons label{
        display: block;
        margin: 4px;

    }

    .checkbox-container {
        padding: 0 5px;
    }

    header {
        width: 100%;
    }
    .logo {
        width: 20%;
        margin: 10px;
        color: var(--clr-dark);
        

    }
}



body {
    margin: 2%;
    background-color: var(--clr-background);
}

.logo {
    width: 10%;
    margin: 20px auto 20px;
    display: block;
    background-color: var(--clr-background);
}

#description  a {
    color: var(--clr-background);
    margin-left: 20px;
    font-size: 1.25em;
}

#description  a:hover {
    color: var(--clr-background);
    
}

#description  a:visited {
    color: var(--clr-attributes);
}

.headline-container,
.requiredformfield,
.examplesurveyformheadline {
    background-color: var(--clr-light);
    width: 90%;
    border: 1px solid var(--clr-dark);
    padding: 20px 10px;    
    margin: 20px auto 0;
}

.requiredformfield {
    width: 75%;
    margin: 20px auto;
}



.headline-container,
.requiredformfield h2,
.examplesurveyformheadline h1 {
    text-align: center;
}

.examplesurveyformheadline {
    width: 80%;
}


.keyboard  {
    background-color: lightgrey;
    border: 1px solid grey;
    box-shadow: var(--bs);
    font-weight: 400;
    font-size: 1rem;
    padding: 1px;
    border-radius: 2px;
}

.attributes {
    background-color: var(--clr-attributes);
    color: var(--clr-dark);
    border: 1px solid black;
    font-weight: 600;
    font-size: 1rem;
    padding: 1px;
}

/* checkbox styling */

.article {
    margin-bottom: 10px;
}

/* since all checkboxes are inside a div, div is a block element */
.checkbox-container {
    display: inline-block;
    align-items: center;
    /* automatic increment of the numbers inside, first resetting it to 1 */
    counter-reset: item;
}

/* since we want the labels to increment each item */
.article label {
    cursor: pointer;
    display: flex;
    counter-increment: item;
}

/* creating checkboxes, by first removing them completely in terms of appearance */
.article input[type="checkbox"] {
    cursor: pointer;
    -webkit-appearance: none;
    appearance: none;
    background: #fff; /* this is needed for iOS. Otherwise the background just becomes black. */
}

/* the before label is giving the checkboxes the shape and size */
.article label::before {
    content: counter(item);
    font-weight: 600;
    margin-right: 10px;
    color: var(--clr-dark);
    width: 1.2em;
    min-width: 1.1em;
    max-height: 1.1em;
    text-align: center;
    display: inline-block;
    border: 1px solid var(--clr-dark);
    box-shadow: var(--bs);
    
}


/* select the label directly after the checkbox */
/* do these things when we hover over it */
/* if we focus it using keyboard */
.article label:hover::before,
.article input[type="checkbox"]:hover + label::before,
.article input[type="checkbox"]:focus + label::before {
    background-color: var(--clr-attributes);
    width: 1.2em;
    display: inline-block;
    border: 1px solid var(--clr-dark);
    box-shadow: none;
}

/* when we click it */
.article input[type="checkbox"]:checked + label::before {
    content: '\002714';
    background-color: var(--clr-attributes);
    color: var(--clr-dark);
    display: flex;
    justify-content: center;
    align-items: center;
}

.brief {
    text-align: center;
    font-size: 12px;
    font-weight: 600;    
}

.inputsEntries {
    background-color: var(--clr-light);
    width: 60%;
    margin: 20px auto;
    font-weight: 600;
    border: 1px solid var(--clr-dark);
    
}

.settings {
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-gap: 1em;
    padding: 10px;
    align-items: center;
    
}

.settings input {
    height: 2em;
    padding: 0 10px;
}

#dropdown {
    margin: 10px 30px;
    padding: 0.5em 1em;
    background: var(--clr-attributes);
    appearance: none;
}


/*  */
.radiobuttons label {
    cursor: pointer;
}

/* creating checkboxes, by first removing them completely in terms of appearance */
.radiobuttons input[type="radio"] {
    -webkit-appearance: none;
    appearance: none;
    cursor: pointer;
    background: var(--clr-light); /* this is needed for iOS. Otherwise the background just becomes black. */
    border-radius: 50%;
}

/* the before label is giving the checkboxes the shape and size */
.radiobuttons label::before {
    content: '\002714';
    font-weight: 600;
    margin-right: 10px;
    padding: 2px;
    color: var(--clr-light);
    width: 1.2em;
    text-align: center;
    border: 1px solid var(--clr-dark);
    box-shadow: var(--bs);
    border-radius: 50%;
}


/* select the label directly after the checkbox */
/* do these things when we hover over it */
/* if we focus it using keyboard */
.radiobuttons label:hover::before,
.radiobuttons input[type="radio"]:hover + label::before,
.radiobuttons input[type="radio"]:focus + label::before {
    content: '\002714';
    color: var(--clr-dark);
    background-color: var(--clr-attributes);
    text-align: center;
    box-shadow: none;
}

/* when we click it */
input[type="radio"]:checked + label::before {
    content: '\002714';
    
}

#textOther {
    padding: 0.25em 1em;
    margin: 7px;
}

.gender-fieldset {
    border: none;
}

.textAreaEntry {
    background-color: var(--clr-light);
    width: 50%;
    margin: 20px auto;
    font-weight: 600;
    border: 1px solid var(--clr-dark);
    
}

.textareaDiv {
    display: grid;
    align-items: center;
    justify-content: center;
    margin-bottom: 10px;
    
}

.textAreaLabel {
    display: grid;
    align-items: center;
    margin: 10px 0px;
}

textarea {
    padding: 5px 10px;
    
}

.submitButton {
    display: flex;
    justify-content: center;
    align-items: center;
}

input[type="submit"] {
    background-color: var(--clr-light);
    color: var(--clr-dark);
    border: 1px solid var(--clr-dark);
    box-shadow: var(--bs);
    border-radius: 2px;
    padding: 5px 20px;
  }

  input[type="submit"]:hover,
  input[type="submit"]:focus {
      cursor: pointer;
      box-shadow: none;
      background-color: var(--clr-attributes);

  }

  .footerText {
      color: var(--clr-attributes);
      text-align: center;
      font-size: 10px;
      margin-top: 10px;
  }

  .plus {
      margin: 0 10px;
  }

  .courses-completed {
      border: none;
  }